apiVersion: argoproj.io/v1
kind: Workflow
metadata:
  generateName: argo-wf-
spec:
  entrypoint: ci-example
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  templates:
  - name: ci-example
    steps:
    - BUILD:
        template: build
    - TEST:
        template: test

  - name: build
    inputs:
      artifacts:
        # NOTE: we need to handle overlapping input artifacts with volume mounts.
        # In the case where input artifacts are desired to be placed in a sub-directory
        # of a volume mount, the executor should place the artifact in the volume, as
        # opposed to the artifacts volume
        CODE:
          path: /go/src/github.com/golang/example
          git:
            url: https://github.com/golang/example.git
    container:
      image: golang:1.8
      command: [sh, -c]
      args: ["
        cd /go/src/github.com/golang/example/hello &&
        go build -v .
      "]
      volumeMounts:
      - name: workdir
        mountPath: /go

  - name: test
    container:
      image: debian:9.1
      command: [sh, -c]
      args: ["/go/src/github.com/golang/example/hello/hello ; sleep 9999; echo done"]
      volumeMounts:
      - name: workdir
        mountPath: /go
